{"version":3,"sources":["main.js"],"names":["formConsole","event","preventDefault","formData","FormData","target","result","entries","pair","console","log","fieldsIsValueClassAdding","selector","fields","document","querySelectorAll","forEach","field","inputField","querySelector","addIsValueClassToFields","addEventListener","value","length","classList","add","remove","initFormConsole","form"],"mappings":";;AAAA;AACA;AACA,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC1BA,QAAMC,cAAN;AACA,MAAMC,WAAW,IAAIC,QAAJ,CAAaH,MAAMI,MAAnB,CAAjB;AACA,MAAIC,SAAS,EAAb;;AAH0B;AAAA;AAAA;;AAAA;AAK1B,yBAAiBH,SAASI,OAAT,EAAjB,8HAAqC;AAAA,UAA5BC,IAA4B;;AACnCF,aAAOE,KAAK,CAAL,CAAP,IAAkBA,KAAK,CAAL,CAAlB;AACD;AAPyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQ1BC,UAAQC,GAAR,CAAYJ,MAAZ;AACD;;AAED;AACA;AACA;AACA,SAASK,wBAAT,CAAkCC,QAAlC,EAA4C;AAC1C,MAAMC,SAASC,SAASC,gBAAT,CAA0BH,QAA1B,CAAf;;AAEAC,SAAOG,OAAP,CAAe,UAACC,KAAD,EAAW;AACxB,QAAMC,aAAaD,MAAME,aAAN,CAAoB,OAApB,CAAnB;AACAC,4BAAwBF,UAAxB;;AAEAA,eAAWG,gBAAX,CAA4B,MAA5B,EAAoC,UAAUpB,KAAV,EAAiB;AACnD,UAAIA,SAASA,MAAMI,MAAnB,EAA2Be,wBAAwBnB,MAAMI,MAA9B;AAC5B,KAFD;AAGD,GAPD;;AASA;AACA;AACA;AACA,WAASe,uBAAT,CAAiCF,UAAjC,EAA6C;AAC3C,QAAIA,WAAWI,KAAX,CAAiBC,MAArB,EAA6B;AAC3BL,iBAAWM,SAAX,CAAqBC,GAArB,CAAyB,UAAzB;AACD,KAFD,MAEO;AACLP,iBAAWM,SAAX,CAAqBE,MAArB,CAA4B,UAA5B;AACD;AACF;AACF;;AAED;AACA;AACA;AACA,SAASC,eAAT,CAAyBf,QAAzB,EAAmC;AACjCE,WAASC,gBAAT,CAA0BH,QAA1B,EAAoCI,OAApC,CAA4C,UAACY,IAAD,EAAU;AACpDA,SAAKP,gBAAL,CAAsB,QAAtB,EAAgC,UAACpB,KAAD,EAAW;AACzCD,kBAAYC,KAAZ;AACD,KAFD;AAGD,GAJD;AAKD;;AAEDa,SAASO,gBAAT,CAA0B,kBAA1B,EAA8C,UAAUpB,KAAV,EAAiB;AAC7DU,2BAAyB,WAAzB;;AAEAgB,kBAAgB,UAAhB;AACD,CAJD","file":"main.js","sourcesContent":["// Wait submit event to input\r\n// Returns nothing\r\nfunction formConsole(event) {\r\n  event.preventDefault();\r\n  const formData = new FormData(event.target);\r\n  let result = {};\r\n\r\n  for (var pair of formData.entries()) {\r\n    result[pair[0]] = pair[1];\r\n  }\r\n  console.log(result);\r\n}\r\n\r\n// Wait for input selector to input ( string - .js-*)\r\n// Add 'is-value' class if input has value in it\r\n// Returns nothing\r\nfunction fieldsIsValueClassAdding(selector) {\r\n  const fields = document.querySelectorAll(selector);\r\n\r\n  fields.forEach((field) => {\r\n    const inputField = field.querySelector('input');\r\n    addIsValueClassToFields(inputField);\r\n\r\n    inputField.addEventListener('blur', function (event) {\r\n      if (event && event.target) addIsValueClassToFields(event.target);\r\n    });\r\n  });\r\n\r\n  // Wait for node to input\r\n  // toggle class whether input has value or not\r\n  // Returns nothing\r\n  function addIsValueClassToFields(inputField) {\r\n    if (inputField.value.length) {\r\n      inputField.classList.add('is-value');\r\n    } else {\r\n      inputField.classList.remove('is-value');\r\n    }\r\n  }\r\n}\r\n\r\n// Wait for input selector to input ( string - .js-*)\r\n// Add Event listener on form submit\r\n// Returns nothing\r\nfunction initFormConsole(selector) {\r\n  document.querySelectorAll(selector).forEach((form) => {\r\n    form.addEventListener('submit', (event) => {\r\n      formConsole(event);\r\n    });\r\n  });\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function (event) {\r\n  fieldsIsValueClassAdding('.js-field');\r\n\r\n  initFormConsole('.js-form');\r\n});\r\n"]}